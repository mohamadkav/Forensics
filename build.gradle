buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'gs-accessing-data-jpa'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
//    compile files("lib/tc-avro-1.0-SNAPSHOT-jar-with-dependencies.jar")
    compile group: 'org.apache.avro', name: 'avro', version: '1.8.2'
    compile files("lib/tc-schema-1.0-SNAPSHOT.jar")
    compile files("lib/tc-avro-1.0-SNAPSHOT.jar")
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.0'
    compile group: 'org.neo4j', name: 'neo4j', version: '3.5.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testCompile("junit:junit")
<<<<<<< HEAD
}

jar {
    from {
        //添加依懒到打包文件
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect{zipTree(it)}
    }
    manifest {
        attributes 'Main-Class': 'edu.nu.forensic.Main'
    }
}
=======
}
>>>>>>> 00b8d9318c14a6e91dbd8ccd0a806cb30a6550cf
